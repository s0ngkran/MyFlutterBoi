///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class DummyTestGetResponseHeaders {
/*
{
  "Accept": "xx",
  "Accept-Encoding": "gzip, deflate, br",
  "Host": "httpbin.org",
  "Postman-Token": "5536a990-563b-4d8b-bf48-c57edb0130dd",
  "User-Agent": "PostmanRuntime/7.28.4",
  "X-Amzn-Trace-Id": "Root=1-62643614-2f6f7259018184a744cf6bbd"
} 
*/

  String? Accept;
  String? AcceptEncoding;
  String? Host;
  String? PostmanToken;
  String? UserAgent;
  String? XAmznTraceId;

  DummyTestGetResponseHeaders({
    this.Accept,
    this.AcceptEncoding,
    this.Host,
    this.PostmanToken,
    this.UserAgent,
    this.XAmznTraceId,
  });
  DummyTestGetResponseHeaders.fromJson(Map<String, dynamic> json) {
    Accept = json['Accept']?.toString();
    AcceptEncoding = json['Accept-Encoding']?.toString();
    Host = json['Host']?.toString();
    PostmanToken = json['Postman-Token']?.toString();
    UserAgent = json['User-Agent']?.toString();
    XAmznTraceId = json['X-Amzn-Trace-Id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['Accept'] = Accept;
    data['Accept-Encoding'] = AcceptEncoding;
    data['Host'] = Host;
    data['Postman-Token'] = PostmanToken;
    data['User-Agent'] = UserAgent;
    data['X-Amzn-Trace-Id'] = XAmznTraceId;
    return data;
  }
}

class DummyTestGetResponseArgs {
/*
{} 
*/

  // DummyTestGetResponseArgs();
  DummyTestGetResponseArgs.fromJson(Map<String, dynamic> json);
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    return data;
  }
}

class DummyTestGetResponse {
/*
{
  "args": {},
  "headers": {
    "Accept": "xx",
    "Accept-Encoding": "gzip, deflate, br",
    "Host": "httpbin.org",
    "Postman-Token": "5536a990-563b-4d8b-bf48-c57edb0130dd",
    "User-Agent": "PostmanRuntime/7.28.4",
    "X-Amzn-Trace-Id": "Root=1-62643614-2f6f7259018184a744cf6bbd"
  },
  "origin": "49.48.225.162",
  "url": "https://httpbin.org/get"
} 
*/

  DummyTestGetResponseArgs? args;
  DummyTestGetResponseHeaders? headers;
  String? origin;
  String? url;

  DummyTestGetResponse({
    this.args,
    this.headers,
    this.origin,
    this.url,
  });
  DummyTestGetResponse.fromJson(Map<String, dynamic> json) {
    args = (json['args'] != null && (json['args'] is Map)) ? DummyTestGetResponseArgs.fromJson(json['args']) : null;
    headers = (json['headers'] != null && (json['headers'] is Map)) ? DummyTestGetResponseHeaders.fromJson(json['headers']) : null;
    origin = json['origin']?.toString();
    url = json['url']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (args != null) {
      data['args'] = args!.toJson();
    }
    if (headers != null) {
      data['headers'] = headers!.toJson();
    }
    data['origin'] = origin;
    data['url'] = url;
    return data;
  }
}
